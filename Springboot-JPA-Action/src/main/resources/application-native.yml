spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/myself_lzc?characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: root
    password: root#123QAZ!
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      max-active: 20
      initial-size: 5
      min-idle: 5
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
  jpa:
    hibernate:
      # 自动更新
      ddl-auto: update
    # 日志中显示sql语句
    show-sql: true


# jpa.hibernate.ddl-auto是hibernate的配置属性，其主要作用是：自动创建、更新、验证数据库表结构。该参数的几种配置如下：
#   ·create：每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
#   ·create-drop：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
#   ·update：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。
#   ·validate：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
# 需要注意的是, 如果你不打算在设计表的时候强制加表级别的外键关系约束, 就自己手动建表, 然后不设置 jpa.hibernate.ddl-auto 或者设置它的值为 none。
# 因为使用 update 更新表, 每次启动 @OneToOne、@OneToMany 等注解会检查表的外键关系, 然后强制建立表外键约束, 这个很烦人。